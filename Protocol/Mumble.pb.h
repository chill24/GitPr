// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "ObjectivecDescriptor.pb.h"

@class MPACL;
@class MPACL_Builder;
@class MPACL_ChanACL;
@class MPACL_ChanACL_Builder;
@class MPACL_ChanGroup;
@class MPACL_ChanGroup_Builder;
@class MPAuthenticate;
@class MPAuthenticate_Builder;
@class MPBanList;
@class MPBanList_BanEntry;
@class MPBanList_BanEntry_Builder;
@class MPBanList_Builder;
@class MPChannelRemove;
@class MPChannelRemove_Builder;
@class MPChannelState;
@class MPChannelState_Builder;
@class MPCodecVersion;
@class MPCodecVersion_Builder;
@class MPContextAction;
@class MPContextActionAdd;
@class MPContextActionAdd_Builder;
@class MPContextAction_Builder;
@class MPCryptSetup;
@class MPCryptSetup_Builder;
@class MPPermissionDenied;
@class MPPermissionDenied_Builder;
@class MPPermissionQuery;
@class MPPermissionQuery_Builder;
@class MPPing;
@class MPPing_Builder;
@class MPQueryUsers;
@class MPQueryUsers_Builder;
@class MPReject;
@class MPReject_Builder;
@class MPServerSync;
@class MPServerSync_Builder;
@class MPTextMessage;
@class MPTextMessage_Builder;
@class MPUDPTunnel;
@class MPUDPTunnel_Builder;
@class MPUserList;
@class MPUserList_Builder;
@class MPUserList_User;
@class MPUserList_User_Builder;
@class MPUserRemove;
@class MPUserRemove_Builder;
@class MPUserState;
@class MPUserState_Builder;
@class MPVersion;
@class MPVersion_Builder;
@class MPVoiceTarget;
@class MPVoiceTarget_Builder;
@class MPVoiceTarget_Target;
@class MPVoiceTarget_Target_Builder;
@class ObjectiveCFileOptions;
@class ObjectiveCFileOptions_Builder;
@class PBDescriptorProto;
@class PBDescriptorProto_Builder;
@class PBDescriptorProto_ExtensionRange;
@class PBDescriptorProto_ExtensionRange_Builder;
@class PBEnumDescriptorProto;
@class PBEnumDescriptorProto_Builder;
@class PBEnumOptions;
@class PBEnumOptions_Builder;
@class PBEnumValueDescriptorProto;
@class PBEnumValueDescriptorProto_Builder;
@class PBEnumValueOptions;
@class PBEnumValueOptions_Builder;
@class PBFieldDescriptorProto;
@class PBFieldDescriptorProto_Builder;
@class PBFieldOptions;
@class PBFieldOptions_Builder;
@class PBFileDescriptorProto;
@class PBFileDescriptorProto_Builder;
@class PBFileDescriptorSet;
@class PBFileDescriptorSet_Builder;
@class PBFileOptions;
@class PBFileOptions_Builder;
@class PBMessageOptions;
@class PBMessageOptions_Builder;
@class PBMethodDescriptorProto;
@class PBMethodDescriptorProto_Builder;
@class PBMethodOptions;
@class PBMethodOptions_Builder;
@class PBServiceDescriptorProto;
@class PBServiceDescriptorProto_Builder;
@class PBServiceOptions;
@class PBServiceOptions_Builder;
@class PBUninterpretedOption;
@class PBUninterpretedOption_Builder;
@class PBUninterpretedOption_NamePart;
@class PBUninterpretedOption_NamePart_Builder;
typedef enum {
  MPReject_RejectTypeNone = 0,
  MPReject_RejectTypeWrongVersion = 1,
  MPReject_RejectTypeInvalidUsername = 2,
  MPReject_RejectTypeWrongUserPw = 3,
  MPReject_RejectTypeWrongServerPw = 4,
  MPReject_RejectTypeUsernameInUse = 5,
  MPReject_RejectTypeServerFull = 6,
  MPReject_RejectTypeNoCertificate = 7,
} MPReject_RejectType;

BOOL MPReject_RejectTypeIsValidValue(MPReject_RejectType value);

typedef enum {
  MPPermissionDenied_DenyTypeText = 0,
  MPPermissionDenied_DenyTypePermission = 1,
  MPPermissionDenied_DenyTypeSuperUser = 2,
  MPPermissionDenied_DenyTypeChannelName = 3,
  MPPermissionDenied_DenyTypeTextTooLong = 4,
  MPPermissionDenied_DenyTypeH9K = 5,
  MPPermissionDenied_DenyTypeTemporaryChannel = 6,
  MPPermissionDenied_DenyTypeMissingCertificate = 7,
  MPPermissionDenied_DenyTypeUserName = 8,
  MPPermissionDenied_DenyTypeChannelFull = 9,
} MPPermissionDenied_DenyType;

BOOL MPPermissionDenied_DenyTypeIsValidValue(MPPermissionDenied_DenyType value);

typedef enum {
  MPContextActionAdd_ContextServer = 1,
  MPContextActionAdd_ContextChannel = 2,
  MPContextActionAdd_ContextUser = 4,
} MPContextActionAdd_Context;

BOOL MPContextActionAdd_ContextIsValidValue(MPContextActionAdd_Context value);


@interface MPMumbleRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface MPVersion : PBGeneratedMessage {
@private
  BOOL hasRelease_:1;
  BOOL hasOs_:1;
  BOOL hasOsVersion_:1;
  BOOL hasVersion_:1;
  NSString* release;
  NSString* os;
  NSString* osVersion;
  int32_t version;
}
- (BOOL) hasVersion;
- (BOOL) hasRelease;
- (BOOL) hasOs;
- (BOOL) hasOsVersion;
@property (readonly) int32_t version;
@property (readonly, retain) NSString* release;
@property (readonly, retain) NSString* os;
@property (readonly, retain) NSString* osVersion;

+ (MPVersion*) defaultInstance;
- (MPVersion*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPVersion_Builder*) builder;
+ (MPVersion_Builder*) builder;
+ (MPVersion_Builder*) builderWithPrototype:(MPVersion*) prototype;

+ (MPVersion*) parseFromData:(NSData*) data;
+ (MPVersion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVersion*) parseFromInputStream:(NSInputStream*) input;
+ (MPVersion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVersion*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPVersion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPVersion_Builder : PBGeneratedMessage_Builder {
@private
  MPVersion* result;
}

- (MPVersion*) defaultInstance;

- (MPVersion_Builder*) clear;
- (MPVersion_Builder*) clone;

- (MPVersion*) build;
- (MPVersion*) buildPartial;

- (MPVersion_Builder*) mergeFrom:(MPVersion*) other;
- (MPVersion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPVersion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersion;
- (int32_t) version;
- (MPVersion_Builder*) setVersion:(int32_t) value;
- (MPVersion_Builder*) clearVersion;

- (BOOL) hasRelease;
- (NSString*) release;
- (MPVersion_Builder*) setRelease:(NSString*) value;
- (MPVersion_Builder*) clearRelease;

- (BOOL) hasOs;
- (NSString*) os;
- (MPVersion_Builder*) setOs:(NSString*) value;
- (MPVersion_Builder*) clearOs;

- (BOOL) hasOsVersion;
- (NSString*) osVersion;
- (MPVersion_Builder*) setOsVersion:(NSString*) value;
- (MPVersion_Builder*) clearOsVersion;
@end

@interface MPUDPTunnel : PBGeneratedMessage {
@private
  BOOL hasPacket_:1;
  NSData* packet;
}
- (BOOL) hasPacket;
@property (readonly, retain) NSData* packet;

+ (MPUDPTunnel*) defaultInstance;
- (MPUDPTunnel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUDPTunnel_Builder*) builder;
+ (MPUDPTunnel_Builder*) builder;
+ (MPUDPTunnel_Builder*) builderWithPrototype:(MPUDPTunnel*) prototype;

+ (MPUDPTunnel*) parseFromData:(NSData*) data;
+ (MPUDPTunnel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUDPTunnel*) parseFromInputStream:(NSInputStream*) input;
+ (MPUDPTunnel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUDPTunnel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUDPTunnel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPUDPTunnel_Builder : PBGeneratedMessage_Builder {
@private
  MPUDPTunnel* result;
}

- (MPUDPTunnel*) defaultInstance;

- (MPUDPTunnel_Builder*) clear;
- (MPUDPTunnel_Builder*) clone;

- (MPUDPTunnel*) build;
- (MPUDPTunnel*) buildPartial;

- (MPUDPTunnel_Builder*) mergeFrom:(MPUDPTunnel*) other;
- (MPUDPTunnel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUDPTunnel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPacket;
- (NSData*) packet;
- (MPUDPTunnel_Builder*) setPacket:(NSData*) value;
- (MPUDPTunnel_Builder*) clearPacket;
@end

@interface MPAuthenticate : PBGeneratedMessage {
@private
  BOOL hasUsername_:1;
  BOOL hasPassword_:1;
  NSString* username;
  NSString* password;
  NSMutableArray* mutableCeltVersionsList;
  NSMutableArray* mutableTokensList;
}
- (BOOL) hasUsername;
- (BOOL) hasPassword;
@property (readonly, retain) NSString* username;
@property (readonly, retain) NSString* password;
- (NSArray*) tokensList;
- (NSString*) tokensAtIndex:(int32_t) index;
- (NSArray*) celtVersionsList;
- (int32_t) celtVersionsAtIndex:(int32_t) index;

+ (MPAuthenticate*) defaultInstance;
- (MPAuthenticate*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPAuthenticate_Builder*) builder;
+ (MPAuthenticate_Builder*) builder;
+ (MPAuthenticate_Builder*) builderWithPrototype:(MPAuthenticate*) prototype;

+ (MPAuthenticate*) parseFromData:(NSData*) data;
+ (MPAuthenticate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPAuthenticate*) parseFromInputStream:(NSInputStream*) input;
+ (MPAuthenticate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPAuthenticate*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPAuthenticate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPAuthenticate_Builder : PBGeneratedMessage_Builder {
@private
  MPAuthenticate* result;
}

- (MPAuthenticate*) defaultInstance;

- (MPAuthenticate_Builder*) clear;
- (MPAuthenticate_Builder*) clone;

- (MPAuthenticate*) build;
- (MPAuthenticate*) buildPartial;

- (MPAuthenticate_Builder*) mergeFrom:(MPAuthenticate*) other;
- (MPAuthenticate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPAuthenticate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUsername;
- (NSString*) username;
- (MPAuthenticate_Builder*) setUsername:(NSString*) value;
- (MPAuthenticate_Builder*) clearUsername;

- (BOOL) hasPassword;
- (NSString*) password;
- (MPAuthenticate_Builder*) setPassword:(NSString*) value;
- (MPAuthenticate_Builder*) clearPassword;

- (NSArray*) tokensList;
- (NSString*) tokensAtIndex:(int32_t) index;
- (MPAuthenticate_Builder*) replaceTokensAtIndex:(int32_t) index with:(NSString*) value;
- (MPAuthenticate_Builder*) addTokens:(NSString*) value;
- (MPAuthenticate_Builder*) addAllTokens:(NSArray*) values;
- (MPAuthenticate_Builder*) clearTokensList;

- (NSArray*) celtVersionsList;
- (int32_t) celtVersionsAtIndex:(int32_t) index;
- (MPAuthenticate_Builder*) replaceCeltVersionsAtIndex:(int32_t) index with:(int32_t) value;
- (MPAuthenticate_Builder*) addCeltVersions:(int32_t) value;
- (MPAuthenticate_Builder*) addAllCeltVersions:(NSArray*) values;
- (MPAuthenticate_Builder*) clearCeltVersionsList;
@end

@interface MPPing : PBGeneratedMessage {
@private
  BOOL hasUdpPingAvg_:1;
  BOOL hasUdpPingVar_:1;
  BOOL hasTcpPingAvg_:1;
  BOOL hasTcpPingVar_:1;
  BOOL hasTimestamp_:1;
  BOOL hasGood_:1;
  BOOL hasLate_:1;
  BOOL hasLost_:1;
  BOOL hasResync_:1;
  BOOL hasUdpPackets_:1;
  BOOL hasTcpPackets_:1;
  Float32 udpPingAvg;
  Float32 udpPingVar;
  Float32 tcpPingAvg;
  Float32 tcpPingVar;
  int64_t timestamp;
  int32_t good;
  int32_t late;
  int32_t lost;
  int32_t resync;
  int32_t udpPackets;
  int32_t tcpPackets;
}
- (BOOL) hasTimestamp;
- (BOOL) hasGood;
- (BOOL) hasLate;
- (BOOL) hasLost;
- (BOOL) hasResync;
- (BOOL) hasUdpPackets;
- (BOOL) hasTcpPackets;
- (BOOL) hasUdpPingAvg;
- (BOOL) hasUdpPingVar;
- (BOOL) hasTcpPingAvg;
- (BOOL) hasTcpPingVar;
@property (readonly) int64_t timestamp;
@property (readonly) int32_t good;
@property (readonly) int32_t late;
@property (readonly) int32_t lost;
@property (readonly) int32_t resync;
@property (readonly) int32_t udpPackets;
@property (readonly) int32_t tcpPackets;
@property (readonly) Float32 udpPingAvg;
@property (readonly) Float32 udpPingVar;
@property (readonly) Float32 tcpPingAvg;
@property (readonly) Float32 tcpPingVar;

+ (MPPing*) defaultInstance;
- (MPPing*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPPing_Builder*) builder;
+ (MPPing_Builder*) builder;
+ (MPPing_Builder*) builderWithPrototype:(MPPing*) prototype;

+ (MPPing*) parseFromData:(NSData*) data;
+ (MPPing*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPing*) parseFromInputStream:(NSInputStream*) input;
+ (MPPing*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPing*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPPing*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPPing_Builder : PBGeneratedMessage_Builder {
@private
  MPPing* result;
}

- (MPPing*) defaultInstance;

- (MPPing_Builder*) clear;
- (MPPing_Builder*) clone;

- (MPPing*) build;
- (MPPing*) buildPartial;

- (MPPing_Builder*) mergeFrom:(MPPing*) other;
- (MPPing_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPPing_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTimestamp;
- (int64_t) timestamp;
- (MPPing_Builder*) setTimestamp:(int64_t) value;
- (MPPing_Builder*) clearTimestamp;

- (BOOL) hasGood;
- (int32_t) good;
- (MPPing_Builder*) setGood:(int32_t) value;
- (MPPing_Builder*) clearGood;

- (BOOL) hasLate;
- (int32_t) late;
- (MPPing_Builder*) setLate:(int32_t) value;
- (MPPing_Builder*) clearLate;

- (BOOL) hasLost;
- (int32_t) lost;
- (MPPing_Builder*) setLost:(int32_t) value;
- (MPPing_Builder*) clearLost;

- (BOOL) hasResync;
- (int32_t) resync;
- (MPPing_Builder*) setResync:(int32_t) value;
- (MPPing_Builder*) clearResync;

- (BOOL) hasUdpPackets;
- (int32_t) udpPackets;
- (MPPing_Builder*) setUdpPackets:(int32_t) value;
- (MPPing_Builder*) clearUdpPackets;

- (BOOL) hasTcpPackets;
- (int32_t) tcpPackets;
- (MPPing_Builder*) setTcpPackets:(int32_t) value;
- (MPPing_Builder*) clearTcpPackets;

- (BOOL) hasUdpPingAvg;
- (Float32) udpPingAvg;
- (MPPing_Builder*) setUdpPingAvg:(Float32) value;
- (MPPing_Builder*) clearUdpPingAvg;

- (BOOL) hasUdpPingVar;
- (Float32) udpPingVar;
- (MPPing_Builder*) setUdpPingVar:(Float32) value;
- (MPPing_Builder*) clearUdpPingVar;

- (BOOL) hasTcpPingAvg;
- (Float32) tcpPingAvg;
- (MPPing_Builder*) setTcpPingAvg:(Float32) value;
- (MPPing_Builder*) clearTcpPingAvg;

- (BOOL) hasTcpPingVar;
- (Float32) tcpPingVar;
- (MPPing_Builder*) setTcpPingVar:(Float32) value;
- (MPPing_Builder*) clearTcpPingVar;
@end

@interface MPReject : PBGeneratedMessage {
@private
  BOOL hasReason_:1;
  BOOL hasType_:1;
  NSString* reason;
  MPReject_RejectType type;
}
- (BOOL) hasType;
- (BOOL) hasReason;
@property (readonly) MPReject_RejectType type;
@property (readonly, retain) NSString* reason;

+ (MPReject*) defaultInstance;
- (MPReject*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPReject_Builder*) builder;
+ (MPReject_Builder*) builder;
+ (MPReject_Builder*) builderWithPrototype:(MPReject*) prototype;

+ (MPReject*) parseFromData:(NSData*) data;
+ (MPReject*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPReject*) parseFromInputStream:(NSInputStream*) input;
+ (MPReject*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPReject*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPReject*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPReject_Builder : PBGeneratedMessage_Builder {
@private
  MPReject* result;
}

- (MPReject*) defaultInstance;

- (MPReject_Builder*) clear;
- (MPReject_Builder*) clone;

- (MPReject*) build;
- (MPReject*) buildPartial;

- (MPReject_Builder*) mergeFrom:(MPReject*) other;
- (MPReject_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPReject_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (MPReject_RejectType) type;
- (MPReject_Builder*) setType:(MPReject_RejectType) value;
- (MPReject_Builder*) clearType;

- (BOOL) hasReason;
- (NSString*) reason;
- (MPReject_Builder*) setReason:(NSString*) value;
- (MPReject_Builder*) clearReason;
@end

@interface MPServerSync : PBGeneratedMessage {
@private
  BOOL hasAllowHtml_:1;
  BOOL hasPermissions_:1;
  BOOL hasWelcomeText_:1;
  BOOL hasSession_:1;
  BOOL hasMaxBandwidth_:1;
  BOOL allowHtml_:1;
  int64_t permissions;
  NSString* welcomeText;
  int32_t session;
  int32_t maxBandwidth;
}
- (BOOL) hasSession;
- (BOOL) hasMaxBandwidth;
- (BOOL) hasWelcomeText;
- (BOOL) hasPermissions;
- (BOOL) hasAllowHtml;
@property (readonly) int32_t session;
@property (readonly) int32_t maxBandwidth;
@property (readonly, retain) NSString* welcomeText;
@property (readonly) int64_t permissions;
- (BOOL) allowHtml;

+ (MPServerSync*) defaultInstance;
- (MPServerSync*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPServerSync_Builder*) builder;
+ (MPServerSync_Builder*) builder;
+ (MPServerSync_Builder*) builderWithPrototype:(MPServerSync*) prototype;

+ (MPServerSync*) parseFromData:(NSData*) data;
+ (MPServerSync*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPServerSync*) parseFromInputStream:(NSInputStream*) input;
+ (MPServerSync*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPServerSync*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPServerSync*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPServerSync_Builder : PBGeneratedMessage_Builder {
@private
  MPServerSync* result;
}

- (MPServerSync*) defaultInstance;

- (MPServerSync_Builder*) clear;
- (MPServerSync_Builder*) clone;

- (MPServerSync*) build;
- (MPServerSync*) buildPartial;

- (MPServerSync_Builder*) mergeFrom:(MPServerSync*) other;
- (MPServerSync_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPServerSync_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSession;
- (int32_t) session;
- (MPServerSync_Builder*) setSession:(int32_t) value;
- (MPServerSync_Builder*) clearSession;

- (BOOL) hasMaxBandwidth;
- (int32_t) maxBandwidth;
- (MPServerSync_Builder*) setMaxBandwidth:(int32_t) value;
- (MPServerSync_Builder*) clearMaxBandwidth;

- (BOOL) hasWelcomeText;
- (NSString*) welcomeText;
- (MPServerSync_Builder*) setWelcomeText:(NSString*) value;
- (MPServerSync_Builder*) clearWelcomeText;

- (BOOL) hasPermissions;
- (int64_t) permissions;
- (MPServerSync_Builder*) setPermissions:(int64_t) value;
- (MPServerSync_Builder*) clearPermissions;

- (BOOL) hasAllowHtml;
- (BOOL) allowHtml;
- (MPServerSync_Builder*) setAllowHtml:(BOOL) value;
- (MPServerSync_Builder*) clearAllowHtml;
@end

@interface MPChannelRemove : PBGeneratedMessage {
@private
  BOOL hasChannelId_:1;
  int32_t channelId;
}
- (BOOL) hasChannelId;
@property (readonly) int32_t channelId;

+ (MPChannelRemove*) defaultInstance;
- (MPChannelRemove*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPChannelRemove_Builder*) builder;
+ (MPChannelRemove_Builder*) builder;
+ (MPChannelRemove_Builder*) builderWithPrototype:(MPChannelRemove*) prototype;

+ (MPChannelRemove*) parseFromData:(NSData*) data;
+ (MPChannelRemove*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPChannelRemove*) parseFromInputStream:(NSInputStream*) input;
+ (MPChannelRemove*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPChannelRemove*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPChannelRemove*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPChannelRemove_Builder : PBGeneratedMessage_Builder {
@private
  MPChannelRemove* result;
}

- (MPChannelRemove*) defaultInstance;

- (MPChannelRemove_Builder*) clear;
- (MPChannelRemove_Builder*) clone;

- (MPChannelRemove*) build;
- (MPChannelRemove*) buildPartial;

- (MPChannelRemove_Builder*) mergeFrom:(MPChannelRemove*) other;
- (MPChannelRemove_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPChannelRemove_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (int32_t) channelId;
- (MPChannelRemove_Builder*) setChannelId:(int32_t) value;
- (MPChannelRemove_Builder*) clearChannelId;
@end

@interface MPChannelState : PBGeneratedMessage {
@private
  BOOL hasTemporary_:1;
  BOOL hasPosition_:1;
  BOOL hasName_:1;
  BOOL hasDescription_:1;
  BOOL hasChannelId_:1;
  BOOL hasParent_:1;
  BOOL temporary_:1;
  int32_t position;
  NSString* name;
  NSString* description;
  int32_t channelId;
  int32_t parent;
  NSMutableArray* mutableLinksList;
  NSMutableArray* mutableLinksAddList;
  NSMutableArray* mutableLinksRemoveList;
}
- (BOOL) hasChannelId;
- (BOOL) hasParent;
- (BOOL) hasName;
- (BOOL) hasDescription;
- (BOOL) hasTemporary;
- (BOOL) hasPosition;
@property (readonly) int32_t channelId;
@property (readonly) int32_t parent;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSString* description;
- (BOOL) temporary;
@property (readonly) int32_t position;
- (NSArray*) linksList;
- (int32_t) linksAtIndex:(int32_t) index;
- (NSArray*) linksAddList;
- (int32_t) linksAddAtIndex:(int32_t) index;
- (NSArray*) linksRemoveList;
- (int32_t) linksRemoveAtIndex:(int32_t) index;

+ (MPChannelState*) defaultInstance;
- (MPChannelState*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPChannelState_Builder*) builder;
+ (MPChannelState_Builder*) builder;
+ (MPChannelState_Builder*) builderWithPrototype:(MPChannelState*) prototype;

+ (MPChannelState*) parseFromData:(NSData*) data;
+ (MPChannelState*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPChannelState*) parseFromInputStream:(NSInputStream*) input;
+ (MPChannelState*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPChannelState*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPChannelState*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPChannelState_Builder : PBGeneratedMessage_Builder {
@private
  MPChannelState* result;
}

- (MPChannelState*) defaultInstance;

- (MPChannelState_Builder*) clear;
- (MPChannelState_Builder*) clone;

- (MPChannelState*) build;
- (MPChannelState*) buildPartial;

- (MPChannelState_Builder*) mergeFrom:(MPChannelState*) other;
- (MPChannelState_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPChannelState_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (int32_t) channelId;
- (MPChannelState_Builder*) setChannelId:(int32_t) value;
- (MPChannelState_Builder*) clearChannelId;

- (BOOL) hasParent;
- (int32_t) parent;
- (MPChannelState_Builder*) setParent:(int32_t) value;
- (MPChannelState_Builder*) clearParent;

- (BOOL) hasName;
- (NSString*) name;
- (MPChannelState_Builder*) setName:(NSString*) value;
- (MPChannelState_Builder*) clearName;

- (NSArray*) linksList;
- (int32_t) linksAtIndex:(int32_t) index;
- (MPChannelState_Builder*) replaceLinksAtIndex:(int32_t) index with:(int32_t) value;
- (MPChannelState_Builder*) addLinks:(int32_t) value;
- (MPChannelState_Builder*) addAllLinks:(NSArray*) values;
- (MPChannelState_Builder*) clearLinksList;

- (BOOL) hasDescription;
- (NSString*) description;
- (MPChannelState_Builder*) setDescription:(NSString*) value;
- (MPChannelState_Builder*) clearDescription;

- (NSArray*) linksAddList;
- (int32_t) linksAddAtIndex:(int32_t) index;
- (MPChannelState_Builder*) replaceLinksAddAtIndex:(int32_t) index with:(int32_t) value;
- (MPChannelState_Builder*) addLinksAdd:(int32_t) value;
- (MPChannelState_Builder*) addAllLinksAdd:(NSArray*) values;
- (MPChannelState_Builder*) clearLinksAddList;

- (NSArray*) linksRemoveList;
- (int32_t) linksRemoveAtIndex:(int32_t) index;
- (MPChannelState_Builder*) replaceLinksRemoveAtIndex:(int32_t) index with:(int32_t) value;
- (MPChannelState_Builder*) addLinksRemove:(int32_t) value;
- (MPChannelState_Builder*) addAllLinksRemove:(NSArray*) values;
- (MPChannelState_Builder*) clearLinksRemoveList;

- (BOOL) hasTemporary;
- (BOOL) temporary;
- (MPChannelState_Builder*) setTemporary:(BOOL) value;
- (MPChannelState_Builder*) clearTemporary;

- (BOOL) hasPosition;
- (int32_t) position;
- (MPChannelState_Builder*) setPosition:(int32_t) value;
- (MPChannelState_Builder*) clearPosition;
@end

@interface MPUserRemove : PBGeneratedMessage {
@private
  BOOL hasBan_:1;
  BOOL hasReason_:1;
  BOOL hasSession_:1;
  BOOL hasActor_:1;
  BOOL ban_:1;
  NSString* reason;
  int32_t session;
  int32_t actor;
}
- (BOOL) hasSession;
- (BOOL) hasActor;
- (BOOL) hasReason;
- (BOOL) hasBan;
@property (readonly) int32_t session;
@property (readonly) int32_t actor;
@property (readonly, retain) NSString* reason;
- (BOOL) ban;

+ (MPUserRemove*) defaultInstance;
- (MPUserRemove*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUserRemove_Builder*) builder;
+ (MPUserRemove_Builder*) builder;
+ (MPUserRemove_Builder*) builderWithPrototype:(MPUserRemove*) prototype;

+ (MPUserRemove*) parseFromData:(NSData*) data;
+ (MPUserRemove*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserRemove*) parseFromInputStream:(NSInputStream*) input;
+ (MPUserRemove*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserRemove*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUserRemove*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPUserRemove_Builder : PBGeneratedMessage_Builder {
@private
  MPUserRemove* result;
}

- (MPUserRemove*) defaultInstance;

- (MPUserRemove_Builder*) clear;
- (MPUserRemove_Builder*) clone;

- (MPUserRemove*) build;
- (MPUserRemove*) buildPartial;

- (MPUserRemove_Builder*) mergeFrom:(MPUserRemove*) other;
- (MPUserRemove_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUserRemove_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSession;
- (int32_t) session;
- (MPUserRemove_Builder*) setSession:(int32_t) value;
- (MPUserRemove_Builder*) clearSession;

- (BOOL) hasActor;
- (int32_t) actor;
- (MPUserRemove_Builder*) setActor:(int32_t) value;
- (MPUserRemove_Builder*) clearActor;

- (BOOL) hasReason;
- (NSString*) reason;
- (MPUserRemove_Builder*) setReason:(NSString*) value;
- (MPUserRemove_Builder*) clearReason;

- (BOOL) hasBan;
- (BOOL) ban;
- (MPUserRemove_Builder*) setBan:(BOOL) value;
- (MPUserRemove_Builder*) clearBan;
@end

@interface MPUserState : PBGeneratedMessage {
@private
  BOOL hasMute_:1;
  BOOL hasDeaf_:1;
  BOOL hasSuppress_:1;
  BOOL hasSelfMute_:1;
  BOOL hasSelfDeaf_:1;
  BOOL hasName_:1;
  BOOL hasPluginContext_:1;
  BOOL hasPluginIdentity_:1;
  BOOL hasComment_:1;
  BOOL hasHash_:1;
  BOOL hasTexture_:1;
  BOOL hasSession_:1;
  BOOL hasActor_:1;
  BOOL hasUserId_:1;
  BOOL hasChannelId_:1;
  BOOL mute_:1;
  BOOL deaf_:1;
  BOOL suppress_:1;
  BOOL selfMute_:1;
  BOOL selfDeaf_:1;
  NSString* name;
  NSString* pluginContext;
  NSString* pluginIdentity;
  NSString* comment;
  NSString* hash;
  NSData* texture;
  int32_t session;
  int32_t actor;
  int32_t userId;
  int32_t channelId;
}
- (BOOL) hasSession;
- (BOOL) hasActor;
- (BOOL) hasName;
- (BOOL) hasUserId;
- (BOOL) hasChannelId;
- (BOOL) hasMute;
- (BOOL) hasDeaf;
- (BOOL) hasSuppress;
- (BOOL) hasSelfMute;
- (BOOL) hasSelfDeaf;
- (BOOL) hasTexture;
- (BOOL) hasPluginContext;
- (BOOL) hasPluginIdentity;
- (BOOL) hasComment;
- (BOOL) hasHash;
@property (readonly) int32_t session;
@property (readonly) int32_t actor;
@property (readonly, retain) NSString* name;
@property (readonly) int32_t userId;
@property (readonly) int32_t channelId;
- (BOOL) mute;
- (BOOL) deaf;
- (BOOL) suppress;
- (BOOL) selfMute;
- (BOOL) selfDeaf;
@property (readonly, retain) NSData* texture;
@property (readonly, retain) NSString* pluginContext;
@property (readonly, retain) NSString* pluginIdentity;
@property (readonly, retain) NSString* comment;
@property (readonly, retain) NSString* hash;

+ (MPUserState*) defaultInstance;
- (MPUserState*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUserState_Builder*) builder;
+ (MPUserState_Builder*) builder;
+ (MPUserState_Builder*) builderWithPrototype:(MPUserState*) prototype;

+ (MPUserState*) parseFromData:(NSData*) data;
+ (MPUserState*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserState*) parseFromInputStream:(NSInputStream*) input;
+ (MPUserState*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserState*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUserState*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPUserState_Builder : PBGeneratedMessage_Builder {
@private
  MPUserState* result;
}

- (MPUserState*) defaultInstance;

- (MPUserState_Builder*) clear;
- (MPUserState_Builder*) clone;

- (MPUserState*) build;
- (MPUserState*) buildPartial;

- (MPUserState_Builder*) mergeFrom:(MPUserState*) other;
- (MPUserState_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUserState_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSession;
- (int32_t) session;
- (MPUserState_Builder*) setSession:(int32_t) value;
- (MPUserState_Builder*) clearSession;

- (BOOL) hasActor;
- (int32_t) actor;
- (MPUserState_Builder*) setActor:(int32_t) value;
- (MPUserState_Builder*) clearActor;

- (BOOL) hasName;
- (NSString*) name;
- (MPUserState_Builder*) setName:(NSString*) value;
- (MPUserState_Builder*) clearName;

- (BOOL) hasUserId;
- (int32_t) userId;
- (MPUserState_Builder*) setUserId:(int32_t) value;
- (MPUserState_Builder*) clearUserId;

- (BOOL) hasChannelId;
- (int32_t) channelId;
- (MPUserState_Builder*) setChannelId:(int32_t) value;
- (MPUserState_Builder*) clearChannelId;

- (BOOL) hasMute;
- (BOOL) mute;
- (MPUserState_Builder*) setMute:(BOOL) value;
- (MPUserState_Builder*) clearMute;

- (BOOL) hasDeaf;
- (BOOL) deaf;
- (MPUserState_Builder*) setDeaf:(BOOL) value;
- (MPUserState_Builder*) clearDeaf;

- (BOOL) hasSuppress;
- (BOOL) suppress;
- (MPUserState_Builder*) setSuppress:(BOOL) value;
- (MPUserState_Builder*) clearSuppress;

- (BOOL) hasSelfMute;
- (BOOL) selfMute;
- (MPUserState_Builder*) setSelfMute:(BOOL) value;
- (MPUserState_Builder*) clearSelfMute;

- (BOOL) hasSelfDeaf;
- (BOOL) selfDeaf;
- (MPUserState_Builder*) setSelfDeaf:(BOOL) value;
- (MPUserState_Builder*) clearSelfDeaf;

- (BOOL) hasTexture;
- (NSData*) texture;
- (MPUserState_Builder*) setTexture:(NSData*) value;
- (MPUserState_Builder*) clearTexture;

- (BOOL) hasPluginContext;
- (NSString*) pluginContext;
- (MPUserState_Builder*) setPluginContext:(NSString*) value;
- (MPUserState_Builder*) clearPluginContext;

- (BOOL) hasPluginIdentity;
- (NSString*) pluginIdentity;
- (MPUserState_Builder*) setPluginIdentity:(NSString*) value;
- (MPUserState_Builder*) clearPluginIdentity;

- (BOOL) hasComment;
- (NSString*) comment;
- (MPUserState_Builder*) setComment:(NSString*) value;
- (MPUserState_Builder*) clearComment;

- (BOOL) hasHash;
- (NSString*) hash;
- (MPUserState_Builder*) setHash:(NSString*) value;
- (MPUserState_Builder*) clearHash;
@end

@interface MPBanList : PBGeneratedMessage {
@private
  BOOL hasQuery_:1;
  BOOL query_:1;
  NSMutableArray* mutableBansList;
}
- (BOOL) hasQuery;
- (BOOL) query;
- (NSArray*) bansList;
- (MPBanList_BanEntry*) bansAtIndex:(int32_t) index;

+ (MPBanList*) defaultInstance;
- (MPBanList*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPBanList_Builder*) builder;
+ (MPBanList_Builder*) builder;
+ (MPBanList_Builder*) builderWithPrototype:(MPBanList*) prototype;

+ (MPBanList*) parseFromData:(NSData*) data;
+ (MPBanList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPBanList*) parseFromInputStream:(NSInputStream*) input;
+ (MPBanList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPBanList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPBanList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPBanList_BanEntry : PBGeneratedMessage {
@private
  BOOL hasName_:1;
  BOOL hasHash_:1;
  BOOL hasReason_:1;
  BOOL hasStart_:1;
  BOOL hasAddress_:1;
  BOOL hasMask_:1;
  BOOL hasDuration_:1;
  NSString* name;
  NSString* hash;
  NSString* reason;
  NSString* start;
  NSData* address;
  int32_t mask;
  int32_t duration;
}
- (BOOL) hasAddress;
- (BOOL) hasMask;
- (BOOL) hasName;
- (BOOL) hasHash;
- (BOOL) hasReason;
- (BOOL) hasStart;
- (BOOL) hasDuration;
@property (readonly, retain) NSData* address;
@property (readonly) int32_t mask;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSString* hash;
@property (readonly, retain) NSString* reason;
@property (readonly, retain) NSString* start;
@property (readonly) int32_t duration;

+ (MPBanList_BanEntry*) defaultInstance;
- (MPBanList_BanEntry*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPBanList_BanEntry_Builder*) builder;
+ (MPBanList_BanEntry_Builder*) builder;
+ (MPBanList_BanEntry_Builder*) builderWithPrototype:(MPBanList_BanEntry*) prototype;

+ (MPBanList_BanEntry*) parseFromData:(NSData*) data;
+ (MPBanList_BanEntry*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPBanList_BanEntry*) parseFromInputStream:(NSInputStream*) input;
+ (MPBanList_BanEntry*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPBanList_BanEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPBanList_BanEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPBanList_BanEntry_Builder : PBGeneratedMessage_Builder {
@private
  MPBanList_BanEntry* result;
}

- (MPBanList_BanEntry*) defaultInstance;

- (MPBanList_BanEntry_Builder*) clear;
- (MPBanList_BanEntry_Builder*) clone;

- (MPBanList_BanEntry*) build;
- (MPBanList_BanEntry*) buildPartial;

- (MPBanList_BanEntry_Builder*) mergeFrom:(MPBanList_BanEntry*) other;
- (MPBanList_BanEntry_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPBanList_BanEntry_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAddress;
- (NSData*) address;
- (MPBanList_BanEntry_Builder*) setAddress:(NSData*) value;
- (MPBanList_BanEntry_Builder*) clearAddress;

- (BOOL) hasMask;
- (int32_t) mask;
- (MPBanList_BanEntry_Builder*) setMask:(int32_t) value;
- (MPBanList_BanEntry_Builder*) clearMask;

- (BOOL) hasName;
- (NSString*) name;
- (MPBanList_BanEntry_Builder*) setName:(NSString*) value;
- (MPBanList_BanEntry_Builder*) clearName;

- (BOOL) hasHash;
- (NSString*) hash;
- (MPBanList_BanEntry_Builder*) setHash:(NSString*) value;
- (MPBanList_BanEntry_Builder*) clearHash;

- (BOOL) hasReason;
- (NSString*) reason;
- (MPBanList_BanEntry_Builder*) setReason:(NSString*) value;
- (MPBanList_BanEntry_Builder*) clearReason;

- (BOOL) hasStart;
- (NSString*) start;
- (MPBanList_BanEntry_Builder*) setStart:(NSString*) value;
- (MPBanList_BanEntry_Builder*) clearStart;

- (BOOL) hasDuration;
- (int32_t) duration;
- (MPBanList_BanEntry_Builder*) setDuration:(int32_t) value;
- (MPBanList_BanEntry_Builder*) clearDuration;
@end

@interface MPBanList_Builder : PBGeneratedMessage_Builder {
@private
  MPBanList* result;
}

- (MPBanList*) defaultInstance;

- (MPBanList_Builder*) clear;
- (MPBanList_Builder*) clone;

- (MPBanList*) build;
- (MPBanList*) buildPartial;

- (MPBanList_Builder*) mergeFrom:(MPBanList*) other;
- (MPBanList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPBanList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) bansList;
- (MPBanList_BanEntry*) bansAtIndex:(int32_t) index;
- (MPBanList_Builder*) replaceBansAtIndex:(int32_t) index with:(MPBanList_BanEntry*) value;
- (MPBanList_Builder*) addBans:(MPBanList_BanEntry*) value;
- (MPBanList_Builder*) addAllBans:(NSArray*) values;
- (MPBanList_Builder*) clearBansList;

- (BOOL) hasQuery;
- (BOOL) query;
- (MPBanList_Builder*) setQuery:(BOOL) value;
- (MPBanList_Builder*) clearQuery;
@end

@interface MPTextMessage : PBGeneratedMessage {
@private
  BOOL hasMessage_:1;
  BOOL hasActor_:1;
  NSString* message;
  int32_t actor;
  NSMutableArray* mutableSessionList;
  NSMutableArray* mutableChannelIdList;
  NSMutableArray* mutableTreeIdList;
}
- (BOOL) hasActor;
- (BOOL) hasMessage;
@property (readonly) int32_t actor;
@property (readonly, retain) NSString* message;
- (NSArray*) sessionList;
- (int32_t) sessionAtIndex:(int32_t) index;
- (NSArray*) channelIdList;
- (int32_t) channelIdAtIndex:(int32_t) index;
- (NSArray*) treeIdList;
- (int32_t) treeIdAtIndex:(int32_t) index;

+ (MPTextMessage*) defaultInstance;
- (MPTextMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPTextMessage_Builder*) builder;
+ (MPTextMessage_Builder*) builder;
+ (MPTextMessage_Builder*) builderWithPrototype:(MPTextMessage*) prototype;

+ (MPTextMessage*) parseFromData:(NSData*) data;
+ (MPTextMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPTextMessage*) parseFromInputStream:(NSInputStream*) input;
+ (MPTextMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPTextMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPTextMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPTextMessage_Builder : PBGeneratedMessage_Builder {
@private
  MPTextMessage* result;
}

- (MPTextMessage*) defaultInstance;

- (MPTextMessage_Builder*) clear;
- (MPTextMessage_Builder*) clone;

- (MPTextMessage*) build;
- (MPTextMessage*) buildPartial;

- (MPTextMessage_Builder*) mergeFrom:(MPTextMessage*) other;
- (MPTextMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPTextMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasActor;
- (int32_t) actor;
- (MPTextMessage_Builder*) setActor:(int32_t) value;
- (MPTextMessage_Builder*) clearActor;

- (NSArray*) sessionList;
- (int32_t) sessionAtIndex:(int32_t) index;
- (MPTextMessage_Builder*) replaceSessionAtIndex:(int32_t) index with:(int32_t) value;
- (MPTextMessage_Builder*) addSession:(int32_t) value;
- (MPTextMessage_Builder*) addAllSession:(NSArray*) values;
- (MPTextMessage_Builder*) clearSessionList;

- (NSArray*) channelIdList;
- (int32_t) channelIdAtIndex:(int32_t) index;
- (MPTextMessage_Builder*) replaceChannelIdAtIndex:(int32_t) index with:(int32_t) value;
- (MPTextMessage_Builder*) addChannelId:(int32_t) value;
- (MPTextMessage_Builder*) addAllChannelId:(NSArray*) values;
- (MPTextMessage_Builder*) clearChannelIdList;

- (NSArray*) treeIdList;
- (int32_t) treeIdAtIndex:(int32_t) index;
- (MPTextMessage_Builder*) replaceTreeIdAtIndex:(int32_t) index with:(int32_t) value;
- (MPTextMessage_Builder*) addTreeId:(int32_t) value;
- (MPTextMessage_Builder*) addAllTreeId:(NSArray*) values;
- (MPTextMessage_Builder*) clearTreeIdList;

- (BOOL) hasMessage;
- (NSString*) message;
- (MPTextMessage_Builder*) setMessage:(NSString*) value;
- (MPTextMessage_Builder*) clearMessage;
@end

@interface MPPermissionDenied : PBGeneratedMessage {
@private
  BOOL hasReason_:1;
  BOOL hasName_:1;
  BOOL hasPermission_:1;
  BOOL hasChannelId_:1;
  BOOL hasSession_:1;
  BOOL hasType_:1;
  NSString* reason;
  NSString* name;
  int32_t permission;
  int32_t channelId;
  int32_t session;
  MPPermissionDenied_DenyType type;
}
- (BOOL) hasPermission;
- (BOOL) hasChannelId;
- (BOOL) hasSession;
- (BOOL) hasReason;
- (BOOL) hasType;
- (BOOL) hasName;
@property (readonly) int32_t permission;
@property (readonly) int32_t channelId;
@property (readonly) int32_t session;
@property (readonly, retain) NSString* reason;
@property (readonly) MPPermissionDenied_DenyType type;
@property (readonly, retain) NSString* name;

+ (MPPermissionDenied*) defaultInstance;
- (MPPermissionDenied*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPPermissionDenied_Builder*) builder;
+ (MPPermissionDenied_Builder*) builder;
+ (MPPermissionDenied_Builder*) builderWithPrototype:(MPPermissionDenied*) prototype;

+ (MPPermissionDenied*) parseFromData:(NSData*) data;
+ (MPPermissionDenied*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPermissionDenied*) parseFromInputStream:(NSInputStream*) input;
+ (MPPermissionDenied*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPermissionDenied*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPPermissionDenied*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPPermissionDenied_Builder : PBGeneratedMessage_Builder {
@private
  MPPermissionDenied* result;
}

- (MPPermissionDenied*) defaultInstance;

- (MPPermissionDenied_Builder*) clear;
- (MPPermissionDenied_Builder*) clone;

- (MPPermissionDenied*) build;
- (MPPermissionDenied*) buildPartial;

- (MPPermissionDenied_Builder*) mergeFrom:(MPPermissionDenied*) other;
- (MPPermissionDenied_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPPermissionDenied_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPermission;
- (int32_t) permission;
- (MPPermissionDenied_Builder*) setPermission:(int32_t) value;
- (MPPermissionDenied_Builder*) clearPermission;

- (BOOL) hasChannelId;
- (int32_t) channelId;
- (MPPermissionDenied_Builder*) setChannelId:(int32_t) value;
- (MPPermissionDenied_Builder*) clearChannelId;

- (BOOL) hasSession;
- (int32_t) session;
- (MPPermissionDenied_Builder*) setSession:(int32_t) value;
- (MPPermissionDenied_Builder*) clearSession;

- (BOOL) hasReason;
- (NSString*) reason;
- (MPPermissionDenied_Builder*) setReason:(NSString*) value;
- (MPPermissionDenied_Builder*) clearReason;

- (BOOL) hasType;
- (MPPermissionDenied_DenyType) type;
- (MPPermissionDenied_Builder*) setType:(MPPermissionDenied_DenyType) value;
- (MPPermissionDenied_Builder*) clearType;

- (BOOL) hasName;
- (NSString*) name;
- (MPPermissionDenied_Builder*) setName:(NSString*) value;
- (MPPermissionDenied_Builder*) clearName;
@end

@interface MPACL : PBGeneratedMessage {
@private
  BOOL hasInheritAcls_:1;
  BOOL hasQuery_:1;
  BOOL hasChannelId_:1;
  BOOL inheritAcls_:1;
  BOOL query_:1;
  int32_t channelId;
  NSMutableArray* mutableGroupsList;
  NSMutableArray* mutableAclsList;
}
- (BOOL) hasChannelId;
- (BOOL) hasInheritAcls;
- (BOOL) hasQuery;
@property (readonly) int32_t channelId;
- (BOOL) inheritAcls;
- (BOOL) query;
- (NSArray*) groupsList;
- (MPACL_ChanGroup*) groupsAtIndex:(int32_t) index;
- (NSArray*) aclsList;
- (MPACL_ChanACL*) aclsAtIndex:(int32_t) index;

+ (MPACL*) defaultInstance;
- (MPACL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPACL_Builder*) builder;
+ (MPACL_Builder*) builder;
+ (MPACL_Builder*) builderWithPrototype:(MPACL*) prototype;

+ (MPACL*) parseFromData:(NSData*) data;
+ (MPACL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACL*) parseFromInputStream:(NSInputStream*) input;
+ (MPACL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPACL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPACL_ChanGroup : PBGeneratedMessage {
@private
  BOOL hasInherited_:1;
  BOOL hasInherit_:1;
  BOOL hasInheritable_:1;
  BOOL hasName_:1;
  BOOL inherited_:1;
  BOOL inherit_:1;
  BOOL inheritable_:1;
  NSString* name;
  NSMutableArray* mutableAddList;
  NSMutableArray* mutableRemoveList;
  NSMutableArray* mutableInheritedMembersList;
}
- (BOOL) hasName;
- (BOOL) hasInherited;
- (BOOL) hasInherit;
- (BOOL) hasInheritable;
@property (readonly, retain) NSString* name;
- (BOOL) inherited;
- (BOOL) inherit;
- (BOOL) inheritable;
- (NSArray*) addList;
- (int32_t) addAtIndex:(int32_t) index;
- (NSArray*) removeList;
- (int32_t) removeAtIndex:(int32_t) index;
- (NSArray*) inheritedMembersList;
- (int32_t) inheritedMembersAtIndex:(int32_t) index;

+ (MPACL_ChanGroup*) defaultInstance;
- (MPACL_ChanGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPACL_ChanGroup_Builder*) builder;
+ (MPACL_ChanGroup_Builder*) builder;
+ (MPACL_ChanGroup_Builder*) builderWithPrototype:(MPACL_ChanGroup*) prototype;

+ (MPACL_ChanGroup*) parseFromData:(NSData*) data;
+ (MPACL_ChanGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACL_ChanGroup*) parseFromInputStream:(NSInputStream*) input;
+ (MPACL_ChanGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACL_ChanGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPACL_ChanGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPACL_ChanGroup_Builder : PBGeneratedMessage_Builder {
@private
  MPACL_ChanGroup* result;
}

- (MPACL_ChanGroup*) defaultInstance;

- (MPACL_ChanGroup_Builder*) clear;
- (MPACL_ChanGroup_Builder*) clone;

- (MPACL_ChanGroup*) build;
- (MPACL_ChanGroup*) buildPartial;

- (MPACL_ChanGroup_Builder*) mergeFrom:(MPACL_ChanGroup*) other;
- (MPACL_ChanGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPACL_ChanGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (MPACL_ChanGroup_Builder*) setName:(NSString*) value;
- (MPACL_ChanGroup_Builder*) clearName;

- (BOOL) hasInherited;
- (BOOL) inherited;
- (MPACL_ChanGroup_Builder*) setInherited:(BOOL) value;
- (MPACL_ChanGroup_Builder*) clearInherited;

- (BOOL) hasInherit;
- (BOOL) inherit;
- (MPACL_ChanGroup_Builder*) setInherit:(BOOL) value;
- (MPACL_ChanGroup_Builder*) clearInherit;

- (BOOL) hasInheritable;
- (BOOL) inheritable;
- (MPACL_ChanGroup_Builder*) setInheritable:(BOOL) value;
- (MPACL_ChanGroup_Builder*) clearInheritable;

- (NSArray*) addList;
- (int32_t) addAtIndex:(int32_t) index;
- (MPACL_ChanGroup_Builder*) replaceAddAtIndex:(int32_t) index with:(int32_t) value;
- (MPACL_ChanGroup_Builder*) addAdd:(int32_t) value;
- (MPACL_ChanGroup_Builder*) addAllAdd:(NSArray*) values;
- (MPACL_ChanGroup_Builder*) clearAddList;

- (NSArray*) removeList;
- (int32_t) removeAtIndex:(int32_t) index;
- (MPACL_ChanGroup_Builder*) replaceRemoveAtIndex:(int32_t) index with:(int32_t) value;
- (MPACL_ChanGroup_Builder*) addRemove:(int32_t) value;
- (MPACL_ChanGroup_Builder*) addAllRemove:(NSArray*) values;
- (MPACL_ChanGroup_Builder*) clearRemoveList;

- (NSArray*) inheritedMembersList;
- (int32_t) inheritedMembersAtIndex:(int32_t) index;
- (MPACL_ChanGroup_Builder*) replaceInheritedMembersAtIndex:(int32_t) index with:(int32_t) value;
- (MPACL_ChanGroup_Builder*) addInheritedMembers:(int32_t) value;
- (MPACL_ChanGroup_Builder*) addAllInheritedMembers:(NSArray*) values;
- (MPACL_ChanGroup_Builder*) clearInheritedMembersList;
@end

@interface MPACL_ChanACL : PBGeneratedMessage {
@private
  BOOL hasApplyHere_:1;
  BOOL hasApplySubs_:1;
  BOOL hasInherited_:1;
  BOOL hasGroup_:1;
  BOOL hasUserId_:1;
  BOOL hasGrant_:1;
  BOOL hasDeny_:1;
  BOOL applyHere_:1;
  BOOL applySubs_:1;
  BOOL inherited_:1;
  NSString* group;
  int32_t userId;
  int32_t grant;
  int32_t deny;
}
- (BOOL) hasApplyHere;
- (BOOL) hasApplySubs;
- (BOOL) hasInherited;
- (BOOL) hasUserId;
- (BOOL) hasGroup;
- (BOOL) hasGrant;
- (BOOL) hasDeny;
- (BOOL) applyHere;
- (BOOL) applySubs;
- (BOOL) inherited;
@property (readonly) int32_t userId;
@property (readonly, retain) NSString* group;
@property (readonly) int32_t grant;
@property (readonly) int32_t deny;

+ (MPACL_ChanACL*) defaultInstance;
- (MPACL_ChanACL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPACL_ChanACL_Builder*) builder;
+ (MPACL_ChanACL_Builder*) builder;
+ (MPACL_ChanACL_Builder*) builderWithPrototype:(MPACL_ChanACL*) prototype;

+ (MPACL_ChanACL*) parseFromData:(NSData*) data;
+ (MPACL_ChanACL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACL_ChanACL*) parseFromInputStream:(NSInputStream*) input;
+ (MPACL_ChanACL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACL_ChanACL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPACL_ChanACL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPACL_ChanACL_Builder : PBGeneratedMessage_Builder {
@private
  MPACL_ChanACL* result;
}

- (MPACL_ChanACL*) defaultInstance;

- (MPACL_ChanACL_Builder*) clear;
- (MPACL_ChanACL_Builder*) clone;

- (MPACL_ChanACL*) build;
- (MPACL_ChanACL*) buildPartial;

- (MPACL_ChanACL_Builder*) mergeFrom:(MPACL_ChanACL*) other;
- (MPACL_ChanACL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPACL_ChanACL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasApplyHere;
- (BOOL) applyHere;
- (MPACL_ChanACL_Builder*) setApplyHere:(BOOL) value;
- (MPACL_ChanACL_Builder*) clearApplyHere;

- (BOOL) hasApplySubs;
- (BOOL) applySubs;
- (MPACL_ChanACL_Builder*) setApplySubs:(BOOL) value;
- (MPACL_ChanACL_Builder*) clearApplySubs;

- (BOOL) hasInherited;
- (BOOL) inherited;
- (MPACL_ChanACL_Builder*) setInherited:(BOOL) value;
- (MPACL_ChanACL_Builder*) clearInherited;

- (BOOL) hasUserId;
- (int32_t) userId;
- (MPACL_ChanACL_Builder*) setUserId:(int32_t) value;
- (MPACL_ChanACL_Builder*) clearUserId;

- (BOOL) hasGroup;
- (NSString*) group;
- (MPACL_ChanACL_Builder*) setGroup:(NSString*) value;
- (MPACL_ChanACL_Builder*) clearGroup;

- (BOOL) hasGrant;
- (int32_t) grant;
- (MPACL_ChanACL_Builder*) setGrant:(int32_t) value;
- (MPACL_ChanACL_Builder*) clearGrant;

- (BOOL) hasDeny;
- (int32_t) deny;
- (MPACL_ChanACL_Builder*) setDeny:(int32_t) value;
- (MPACL_ChanACL_Builder*) clearDeny;
@end

@interface MPACL_Builder : PBGeneratedMessage_Builder {
@private
  MPACL* result;
}

- (MPACL*) defaultInstance;

- (MPACL_Builder*) clear;
- (MPACL_Builder*) clone;

- (MPACL*) build;
- (MPACL*) buildPartial;

- (MPACL_Builder*) mergeFrom:(MPACL*) other;
- (MPACL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPACL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (int32_t) channelId;
- (MPACL_Builder*) setChannelId:(int32_t) value;
- (MPACL_Builder*) clearChannelId;

- (BOOL) hasInheritAcls;
- (BOOL) inheritAcls;
- (MPACL_Builder*) setInheritAcls:(BOOL) value;
- (MPACL_Builder*) clearInheritAcls;

- (NSArray*) groupsList;
- (MPACL_ChanGroup*) groupsAtIndex:(int32_t) index;
- (MPACL_Builder*) replaceGroupsAtIndex:(int32_t) index with:(MPACL_ChanGroup*) value;
- (MPACL_Builder*) addGroups:(MPACL_ChanGroup*) value;
- (MPACL_Builder*) addAllGroups:(NSArray*) values;
- (MPACL_Builder*) clearGroupsList;

- (NSArray*) aclsList;
- (MPACL_ChanACL*) aclsAtIndex:(int32_t) index;
- (MPACL_Builder*) replaceAclsAtIndex:(int32_t) index with:(MPACL_ChanACL*) value;
- (MPACL_Builder*) addAcls:(MPACL_ChanACL*) value;
- (MPACL_Builder*) addAllAcls:(NSArray*) values;
- (MPACL_Builder*) clearAclsList;

- (BOOL) hasQuery;
- (BOOL) query;
- (MPACL_Builder*) setQuery:(BOOL) value;
- (MPACL_Builder*) clearQuery;
@end

@interface MPQueryUsers : PBGeneratedMessage {
@private
  NSMutableArray* mutableNamesList;
  NSMutableArray* mutableIdsList;
}
- (NSArray*) idsList;
- (int32_t) idsAtIndex:(int32_t) index;
- (NSArray*) namesList;
- (NSString*) namesAtIndex:(int32_t) index;

+ (MPQueryUsers*) defaultInstance;
- (MPQueryUsers*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPQueryUsers_Builder*) builder;
+ (MPQueryUsers_Builder*) builder;
+ (MPQueryUsers_Builder*) builderWithPrototype:(MPQueryUsers*) prototype;

+ (MPQueryUsers*) parseFromData:(NSData*) data;
+ (MPQueryUsers*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPQueryUsers*) parseFromInputStream:(NSInputStream*) input;
+ (MPQueryUsers*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPQueryUsers*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPQueryUsers*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPQueryUsers_Builder : PBGeneratedMessage_Builder {
@private
  MPQueryUsers* result;
}

- (MPQueryUsers*) defaultInstance;

- (MPQueryUsers_Builder*) clear;
- (MPQueryUsers_Builder*) clone;

- (MPQueryUsers*) build;
- (MPQueryUsers*) buildPartial;

- (MPQueryUsers_Builder*) mergeFrom:(MPQueryUsers*) other;
- (MPQueryUsers_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPQueryUsers_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) idsList;
- (int32_t) idsAtIndex:(int32_t) index;
- (MPQueryUsers_Builder*) replaceIdsAtIndex:(int32_t) index with:(int32_t) value;
- (MPQueryUsers_Builder*) addIds:(int32_t) value;
- (MPQueryUsers_Builder*) addAllIds:(NSArray*) values;
- (MPQueryUsers_Builder*) clearIdsList;

- (NSArray*) namesList;
- (NSString*) namesAtIndex:(int32_t) index;
- (MPQueryUsers_Builder*) replaceNamesAtIndex:(int32_t) index with:(NSString*) value;
- (MPQueryUsers_Builder*) addNames:(NSString*) value;
- (MPQueryUsers_Builder*) addAllNames:(NSArray*) values;
- (MPQueryUsers_Builder*) clearNamesList;
@end

@interface MPCryptSetup : PBGeneratedMessage {
@private
  BOOL hasKey_:1;
  BOOL hasClientNonce_:1;
  BOOL hasServerNonce_:1;
  NSData* key;
  NSData* clientNonce;
  NSData* serverNonce;
}
- (BOOL) hasKey;
- (BOOL) hasClientNonce;
- (BOOL) hasServerNonce;
@property (readonly, retain) NSData* key;
@property (readonly, retain) NSData* clientNonce;
@property (readonly, retain) NSData* serverNonce;

+ (MPCryptSetup*) defaultInstance;
- (MPCryptSetup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPCryptSetup_Builder*) builder;
+ (MPCryptSetup_Builder*) builder;
+ (MPCryptSetup_Builder*) builderWithPrototype:(MPCryptSetup*) prototype;

+ (MPCryptSetup*) parseFromData:(NSData*) data;
+ (MPCryptSetup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPCryptSetup*) parseFromInputStream:(NSInputStream*) input;
+ (MPCryptSetup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPCryptSetup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPCryptSetup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPCryptSetup_Builder : PBGeneratedMessage_Builder {
@private
  MPCryptSetup* result;
}

- (MPCryptSetup*) defaultInstance;

- (MPCryptSetup_Builder*) clear;
- (MPCryptSetup_Builder*) clone;

- (MPCryptSetup*) build;
- (MPCryptSetup*) buildPartial;

- (MPCryptSetup_Builder*) mergeFrom:(MPCryptSetup*) other;
- (MPCryptSetup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPCryptSetup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKey;
- (NSData*) key;
- (MPCryptSetup_Builder*) setKey:(NSData*) value;
- (MPCryptSetup_Builder*) clearKey;

- (BOOL) hasClientNonce;
- (NSData*) clientNonce;
- (MPCryptSetup_Builder*) setClientNonce:(NSData*) value;
- (MPCryptSetup_Builder*) clearClientNonce;

- (BOOL) hasServerNonce;
- (NSData*) serverNonce;
- (MPCryptSetup_Builder*) setServerNonce:(NSData*) value;
- (MPCryptSetup_Builder*) clearServerNonce;
@end

@interface MPContextActionAdd : PBGeneratedMessage {
@private
  BOOL hasAction_:1;
  BOOL hasText_:1;
  BOOL hasContext_:1;
  NSString* action;
  NSString* text;
  int32_t context;
}
- (BOOL) hasAction;
- (BOOL) hasText;
- (BOOL) hasContext;
@property (readonly, retain) NSString* action;
@property (readonly, retain) NSString* text;
@property (readonly) int32_t context;

+ (MPContextActionAdd*) defaultInstance;
- (MPContextActionAdd*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPContextActionAdd_Builder*) builder;
+ (MPContextActionAdd_Builder*) builder;
+ (MPContextActionAdd_Builder*) builderWithPrototype:(MPContextActionAdd*) prototype;

+ (MPContextActionAdd*) parseFromData:(NSData*) data;
+ (MPContextActionAdd*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPContextActionAdd*) parseFromInputStream:(NSInputStream*) input;
+ (MPContextActionAdd*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPContextActionAdd*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPContextActionAdd*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPContextActionAdd_Builder : PBGeneratedMessage_Builder {
@private
  MPContextActionAdd* result;
}

- (MPContextActionAdd*) defaultInstance;

- (MPContextActionAdd_Builder*) clear;
- (MPContextActionAdd_Builder*) clone;

- (MPContextActionAdd*) build;
- (MPContextActionAdd*) buildPartial;

- (MPContextActionAdd_Builder*) mergeFrom:(MPContextActionAdd*) other;
- (MPContextActionAdd_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPContextActionAdd_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAction;
- (NSString*) action;
- (MPContextActionAdd_Builder*) setAction:(NSString*) value;
- (MPContextActionAdd_Builder*) clearAction;

- (BOOL) hasText;
- (NSString*) text;
- (MPContextActionAdd_Builder*) setText:(NSString*) value;
- (MPContextActionAdd_Builder*) clearText;

- (BOOL) hasContext;
- (int32_t) context;
- (MPContextActionAdd_Builder*) setContext:(int32_t) value;
- (MPContextActionAdd_Builder*) clearContext;
@end

@interface MPContextAction : PBGeneratedMessage {
@private
  BOOL hasAction_:1;
  BOOL hasSession_:1;
  BOOL hasChannelId_:1;
  NSString* action;
  int32_t session;
  int32_t channelId;
}
- (BOOL) hasSession;
- (BOOL) hasChannelId;
- (BOOL) hasAction;
@property (readonly) int32_t session;
@property (readonly) int32_t channelId;
@property (readonly, retain) NSString* action;

+ (MPContextAction*) defaultInstance;
- (MPContextAction*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPContextAction_Builder*) builder;
+ (MPContextAction_Builder*) builder;
+ (MPContextAction_Builder*) builderWithPrototype:(MPContextAction*) prototype;

+ (MPContextAction*) parseFromData:(NSData*) data;
+ (MPContextAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPContextAction*) parseFromInputStream:(NSInputStream*) input;
+ (MPContextAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPContextAction*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPContextAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPContextAction_Builder : PBGeneratedMessage_Builder {
@private
  MPContextAction* result;
}

- (MPContextAction*) defaultInstance;

- (MPContextAction_Builder*) clear;
- (MPContextAction_Builder*) clone;

- (MPContextAction*) build;
- (MPContextAction*) buildPartial;

- (MPContextAction_Builder*) mergeFrom:(MPContextAction*) other;
- (MPContextAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPContextAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSession;
- (int32_t) session;
- (MPContextAction_Builder*) setSession:(int32_t) value;
- (MPContextAction_Builder*) clearSession;

- (BOOL) hasChannelId;
- (int32_t) channelId;
- (MPContextAction_Builder*) setChannelId:(int32_t) value;
- (MPContextAction_Builder*) clearChannelId;

- (BOOL) hasAction;
- (NSString*) action;
- (MPContextAction_Builder*) setAction:(NSString*) value;
- (MPContextAction_Builder*) clearAction;
@end

@interface MPUserList : PBGeneratedMessage {
@private
  NSMutableArray* mutableUsersList;
}
- (NSArray*) usersList;
- (MPUserList_User*) usersAtIndex:(int32_t) index;

+ (MPUserList*) defaultInstance;
- (MPUserList*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUserList_Builder*) builder;
+ (MPUserList_Builder*) builder;
+ (MPUserList_Builder*) builderWithPrototype:(MPUserList*) prototype;

+ (MPUserList*) parseFromData:(NSData*) data;
+ (MPUserList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserList*) parseFromInputStream:(NSInputStream*) input;
+ (MPUserList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUserList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPUserList_User : PBGeneratedMessage {
@private
  BOOL hasName_:1;
  BOOL hasUserId_:1;
  NSString* name;
  int32_t userId;
}
- (BOOL) hasUserId;
- (BOOL) hasName;
@property (readonly) int32_t userId;
@property (readonly, retain) NSString* name;

+ (MPUserList_User*) defaultInstance;
- (MPUserList_User*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUserList_User_Builder*) builder;
+ (MPUserList_User_Builder*) builder;
+ (MPUserList_User_Builder*) builderWithPrototype:(MPUserList_User*) prototype;

+ (MPUserList_User*) parseFromData:(NSData*) data;
+ (MPUserList_User*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserList_User*) parseFromInputStream:(NSInputStream*) input;
+ (MPUserList_User*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserList_User*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUserList_User*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPUserList_User_Builder : PBGeneratedMessage_Builder {
@private
  MPUserList_User* result;
}

- (MPUserList_User*) defaultInstance;

- (MPUserList_User_Builder*) clear;
- (MPUserList_User_Builder*) clone;

- (MPUserList_User*) build;
- (MPUserList_User*) buildPartial;

- (MPUserList_User_Builder*) mergeFrom:(MPUserList_User*) other;
- (MPUserList_User_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUserList_User_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (MPUserList_User_Builder*) setUserId:(int32_t) value;
- (MPUserList_User_Builder*) clearUserId;

- (BOOL) hasName;
- (NSString*) name;
- (MPUserList_User_Builder*) setName:(NSString*) value;
- (MPUserList_User_Builder*) clearName;
@end

@interface MPUserList_Builder : PBGeneratedMessage_Builder {
@private
  MPUserList* result;
}

- (MPUserList*) defaultInstance;

- (MPUserList_Builder*) clear;
- (MPUserList_Builder*) clone;

- (MPUserList*) build;
- (MPUserList*) buildPartial;

- (MPUserList_Builder*) mergeFrom:(MPUserList*) other;
- (MPUserList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUserList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) usersList;
- (MPUserList_User*) usersAtIndex:(int32_t) index;
- (MPUserList_Builder*) replaceUsersAtIndex:(int32_t) index with:(MPUserList_User*) value;
- (MPUserList_Builder*) addUsers:(MPUserList_User*) value;
- (MPUserList_Builder*) addAllUsers:(NSArray*) values;
- (MPUserList_Builder*) clearUsersList;
@end

@interface MPVoiceTarget : PBGeneratedMessage {
@private
  BOOL hasId_:1;
  int32_t id;
  NSMutableArray* mutableTargetsList;
}
- (BOOL) hasId;
@property (readonly) int32_t id;
- (NSArray*) targetsList;
- (MPVoiceTarget_Target*) targetsAtIndex:(int32_t) index;

+ (MPVoiceTarget*) defaultInstance;
- (MPVoiceTarget*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPVoiceTarget_Builder*) builder;
+ (MPVoiceTarget_Builder*) builder;
+ (MPVoiceTarget_Builder*) builderWithPrototype:(MPVoiceTarget*) prototype;

+ (MPVoiceTarget*) parseFromData:(NSData*) data;
+ (MPVoiceTarget*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVoiceTarget*) parseFromInputStream:(NSInputStream*) input;
+ (MPVoiceTarget*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVoiceTarget*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPVoiceTarget*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPVoiceTarget_Target : PBGeneratedMessage {
@private
  BOOL hasLinks_:1;
  BOOL hasChildren_:1;
  BOOL hasGroup_:1;
  BOOL hasChannelId_:1;
  BOOL links_:1;
  BOOL children_:1;
  NSString* group;
  int32_t channelId;
  NSMutableArray* mutableSessionList;
}
- (BOOL) hasChannelId;
- (BOOL) hasGroup;
- (BOOL) hasLinks;
- (BOOL) hasChildren;
@property (readonly) int32_t channelId;
@property (readonly, retain) NSString* group;
- (BOOL) links;
- (BOOL) children;
- (NSArray*) sessionList;
- (int32_t) sessionAtIndex:(int32_t) index;

+ (MPVoiceTarget_Target*) defaultInstance;
- (MPVoiceTarget_Target*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPVoiceTarget_Target_Builder*) builder;
+ (MPVoiceTarget_Target_Builder*) builder;
+ (MPVoiceTarget_Target_Builder*) builderWithPrototype:(MPVoiceTarget_Target*) prototype;

+ (MPVoiceTarget_Target*) parseFromData:(NSData*) data;
+ (MPVoiceTarget_Target*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVoiceTarget_Target*) parseFromInputStream:(NSInputStream*) input;
+ (MPVoiceTarget_Target*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVoiceTarget_Target*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPVoiceTarget_Target*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPVoiceTarget_Target_Builder : PBGeneratedMessage_Builder {
@private
  MPVoiceTarget_Target* result;
}

- (MPVoiceTarget_Target*) defaultInstance;

- (MPVoiceTarget_Target_Builder*) clear;
- (MPVoiceTarget_Target_Builder*) clone;

- (MPVoiceTarget_Target*) build;
- (MPVoiceTarget_Target*) buildPartial;

- (MPVoiceTarget_Target_Builder*) mergeFrom:(MPVoiceTarget_Target*) other;
- (MPVoiceTarget_Target_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPVoiceTarget_Target_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) sessionList;
- (int32_t) sessionAtIndex:(int32_t) index;
- (MPVoiceTarget_Target_Builder*) replaceSessionAtIndex:(int32_t) index with:(int32_t) value;
- (MPVoiceTarget_Target_Builder*) addSession:(int32_t) value;
- (MPVoiceTarget_Target_Builder*) addAllSession:(NSArray*) values;
- (MPVoiceTarget_Target_Builder*) clearSessionList;

- (BOOL) hasChannelId;
- (int32_t) channelId;
- (MPVoiceTarget_Target_Builder*) setChannelId:(int32_t) value;
- (MPVoiceTarget_Target_Builder*) clearChannelId;

- (BOOL) hasGroup;
- (NSString*) group;
- (MPVoiceTarget_Target_Builder*) setGroup:(NSString*) value;
- (MPVoiceTarget_Target_Builder*) clearGroup;

- (BOOL) hasLinks;
- (BOOL) links;
- (MPVoiceTarget_Target_Builder*) setLinks:(BOOL) value;
- (MPVoiceTarget_Target_Builder*) clearLinks;

- (BOOL) hasChildren;
- (BOOL) children;
- (MPVoiceTarget_Target_Builder*) setChildren:(BOOL) value;
- (MPVoiceTarget_Target_Builder*) clearChildren;
@end

@interface MPVoiceTarget_Builder : PBGeneratedMessage_Builder {
@private
  MPVoiceTarget* result;
}

- (MPVoiceTarget*) defaultInstance;

- (MPVoiceTarget_Builder*) clear;
- (MPVoiceTarget_Builder*) clone;

- (MPVoiceTarget*) build;
- (MPVoiceTarget*) buildPartial;

- (MPVoiceTarget_Builder*) mergeFrom:(MPVoiceTarget*) other;
- (MPVoiceTarget_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPVoiceTarget_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (MPVoiceTarget_Builder*) setId:(int32_t) value;
- (MPVoiceTarget_Builder*) clearId;

- (NSArray*) targetsList;
- (MPVoiceTarget_Target*) targetsAtIndex:(int32_t) index;
- (MPVoiceTarget_Builder*) replaceTargetsAtIndex:(int32_t) index with:(MPVoiceTarget_Target*) value;
- (MPVoiceTarget_Builder*) addTargets:(MPVoiceTarget_Target*) value;
- (MPVoiceTarget_Builder*) addAllTargets:(NSArray*) values;
- (MPVoiceTarget_Builder*) clearTargetsList;
@end

@interface MPPermissionQuery : PBGeneratedMessage {
@private
  BOOL hasFlush_:1;
  BOOL hasChannelId_:1;
  BOOL hasPermissions_:1;
  BOOL flush_:1;
  int32_t channelId;
  int32_t permissions;
}
- (BOOL) hasChannelId;
- (BOOL) hasPermissions;
- (BOOL) hasFlush;
@property (readonly) int32_t channelId;
@property (readonly) int32_t permissions;
- (BOOL) flush;

+ (MPPermissionQuery*) defaultInstance;
- (MPPermissionQuery*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPPermissionQuery_Builder*) builder;
+ (MPPermissionQuery_Builder*) builder;
+ (MPPermissionQuery_Builder*) builderWithPrototype:(MPPermissionQuery*) prototype;

+ (MPPermissionQuery*) parseFromData:(NSData*) data;
+ (MPPermissionQuery*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPermissionQuery*) parseFromInputStream:(NSInputStream*) input;
+ (MPPermissionQuery*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPermissionQuery*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPPermissionQuery*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPPermissionQuery_Builder : PBGeneratedMessage_Builder {
@private
  MPPermissionQuery* result;
}

- (MPPermissionQuery*) defaultInstance;

- (MPPermissionQuery_Builder*) clear;
- (MPPermissionQuery_Builder*) clone;

- (MPPermissionQuery*) build;
- (MPPermissionQuery*) buildPartial;

- (MPPermissionQuery_Builder*) mergeFrom:(MPPermissionQuery*) other;
- (MPPermissionQuery_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPPermissionQuery_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (int32_t) channelId;
- (MPPermissionQuery_Builder*) setChannelId:(int32_t) value;
- (MPPermissionQuery_Builder*) clearChannelId;

- (BOOL) hasPermissions;
- (int32_t) permissions;
- (MPPermissionQuery_Builder*) setPermissions:(int32_t) value;
- (MPPermissionQuery_Builder*) clearPermissions;

- (BOOL) hasFlush;
- (BOOL) flush;
- (MPPermissionQuery_Builder*) setFlush:(BOOL) value;
- (MPPermissionQuery_Builder*) clearFlush;
@end

@interface MPCodecVersion : PBGeneratedMessage {
@private
  BOOL hasPreferAlpha_:1;
  BOOL hasAlpha_:1;
  BOOL hasBeta_:1;
  BOOL preferAlpha_:1;
  int32_t alpha;
  int32_t beta;
}
- (BOOL) hasAlpha;
- (BOOL) hasBeta;
- (BOOL) hasPreferAlpha;
@property (readonly) int32_t alpha;
@property (readonly) int32_t beta;
- (BOOL) preferAlpha;

+ (MPCodecVersion*) defaultInstance;
- (MPCodecVersion*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPCodecVersion_Builder*) builder;
+ (MPCodecVersion_Builder*) builder;
+ (MPCodecVersion_Builder*) builderWithPrototype:(MPCodecVersion*) prototype;

+ (MPCodecVersion*) parseFromData:(NSData*) data;
+ (MPCodecVersion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPCodecVersion*) parseFromInputStream:(NSInputStream*) input;
+ (MPCodecVersion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPCodecVersion*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPCodecVersion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPCodecVersion_Builder : PBGeneratedMessage_Builder {
@private
  MPCodecVersion* result;
}

- (MPCodecVersion*) defaultInstance;

- (MPCodecVersion_Builder*) clear;
- (MPCodecVersion_Builder*) clone;

- (MPCodecVersion*) build;
- (MPCodecVersion*) buildPartial;

- (MPCodecVersion_Builder*) mergeFrom:(MPCodecVersion*) other;
- (MPCodecVersion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPCodecVersion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAlpha;
- (int32_t) alpha;
- (MPCodecVersion_Builder*) setAlpha:(int32_t) value;
- (MPCodecVersion_Builder*) clearAlpha;

- (BOOL) hasBeta;
- (int32_t) beta;
- (MPCodecVersion_Builder*) setBeta:(int32_t) value;
- (MPCodecVersion_Builder*) clearBeta;

- (BOOL) hasPreferAlpha;
- (BOOL) preferAlpha;
- (MPCodecVersion_Builder*) setPreferAlpha:(BOOL) value;
- (MPCodecVersion_Builder*) clearPreferAlpha;
@end

